mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "Centroids")) +geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "Centroids"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", linetype = "twodash")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"), linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"),
linetype = "twodash",
size = 3) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"),
linetype = "twodash",
size = 2) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"),
linetype = "twodash",
size = 1) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"),
linetype = "twodash",
size = 1.5) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1", lt = "twodash"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3"))
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 2)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
source('~/coursera-ml-R/ex7/ex7_chunks.R')
# Chunk 1: dependencies
require(ggplot2)
require(knitr)
require(tidyr)
read_chunk("ex7_chunks.R")
# Chunk 2: read-data2
ex7data2 <- read.csv("../data/ex7data/ex7data2.csv")
# Chunk 3: explore-data
g1 <- ggplot(ex7data2, aes(V1, V2)) + geom_point()
g1
# Chunk 4: min-Eu-dist
# Chunk 5: test-min-distance
initial_centroids <- matrix(c(3, 3, 6, 2, 8, 5), 3, 2, TRUE)
minEuDist(ex7data2[15,], initial_centroids)
# Chunk 6: find-closest-centroids
# Chunk 7: test-find-centroids
idx <- findClosestCentroids(ex7data2, initial_centroids)
idx[1:3]
# Chunk 8: compute-centroids
# Chunk 9: test-compute-centroids
computeCentroids(ex7data2, idx, initial_centroids)
# Chunk 10: k-means
# Chunk 11: test-k-means
runKMeans <- kMeans(ex7data2, initial_centroids, 10)
# Chunk 12: plot-test-k-means
ex7data2 <- cbind(ex7data2, K = as.factor(runKMeans[nrow(runKMeans), 1:300]))
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
head(runKMeans)
source('~/coursera-ml-R/ex7/ex7_chunks.R')
# Chunk 1: dependencies
require(ggplot2)
require(knitr)
require(tidyr)
read_chunk("ex7_chunks.R")
# Chunk 2: read-data2
ex7data2 <- read.csv("../data/ex7data/ex7data2.csv")
# Chunk 3: explore-data
g1 <- ggplot(ex7data2, aes(V1, V2)) + geom_point()
g1
# Chunk 4: min-Eu-dist
# Chunk 5: test-min-distance
initial_centroids <- matrix(c(3, 3, 6, 2, 8, 5), 3, 2, TRUE)
minEuDist(ex7data2[15,], initial_centroids)
# Chunk 6: find-closest-centroids
# Chunk 7: test-find-centroids
idx <- findClosestCentroids(ex7data2, initial_centroids)
idx[1:3]
# Chunk 8: compute-centroids
# Chunk 9: test-compute-centroids
computeCentroids(ex7data2, idx, initial_centroids)
# Chunk 10: k-means
# Chunk 11: test-k-means
runKMeans <- kMeans(ex7data2, initial_centroids, 10)
# Chunk 12: plot-test-k-means
ex7data2 <- cbind(ex7data2, K = as.factor(runKMeans[nrow(runKMeans), 1:300]))
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1"),
linetype = "twodash") +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point() +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point(alpha = .7) +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point(alpha = .4) +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
randomInit <- function(X, n){X[sample(nrow(X), n), ]}
randomInit(ex7data2[,1:2], 3)
source('~/coursera-ml-R/ex7/ex7_chunks.R')
randomInit(ex7data2[,1:2], 3)
set.seed(12345)
randomInit(ex7data2[,1:2], 3)
set.seed(12345)
randomInit(ex7data2[,1:2], 3)
bird_small <- read.csv("../data/ex7data/bird_small.csv")
require(R.matlab)
bird_small_mat <- readMat("../data/ex7data/bird_small.mat")
head(bird_small_mat)
bird_small <- read.csv("../data/ex7data/bird_small.csv")$A
bird_small <- read.csv("../data/ex7data/bird_small.csv")
bird_small_mat <- readMat("../data/ex7data/bird_small.mat"")
bird_small_mat <- readMat("../data/ex7data/bird_small.mat")$A
bird_small[1, 1:15]==bird_small_mat[1, 1:15, ]
bird_small[1, 1:15]==bird_small_mat[1, , 1:15]
bird_small[1, 1:15]==bird_small_mat[1, 1:15, ]
bird_small_mat[1, 1:15, 1]
bird_small[1, 1:15]==bird_small_mat[1, 1:15, 1]
bird_small[1, 1:15]==bird_small_mat[1, 1:15, 2]
128*3
bird_small[1, 129:144]==bird_small_mat[1, 1:15, 2]
128*2
bird_small[1, 257:272]==bird_small_mat[1, 1:15, 3]
bird_small_transform <- array(dim = c(1:128, 1:128, 1:3))
bird_small_transform <- array(dim = (1:128, 1:128, 1:3))
?array
bird_small_transform <- array(dim = c(128, 128, 3))
bird_small_transform[, , 1] <- bird_small[, 1:128]
bird_small_transform <- array(dim = c(128, 128, 3))
str(bird_small_transform[, , 1])
str(bird_small[, 1:128])
bird_small <- as.matrix(read.csv("../data/ex7data/bird_small.csv"))
bird_small_transform <- array(dim = c(128, 128, 3))
str(bird_small[, 1:128])
bird_small_transform[, , 1] <- bird_small[, 1:128]
i = 1:3
i
((i-1)*128+1)
(i*128)
bird_small_transform <- array(dim = c(128, 128, 3))
for(i in 1:3){
bird_small_transform[,,i] <- bird_small[, ((i-1)*128+1):(i*128)]
}
sum(bird_small_transform==bird_small_mat)
sum(bird_small_transform!=bird_small_mat)
128*128*3
bird_small <- as.matrix(read.csv("../data/ex7data/bird_small.csv"))
bird_small_transform <- array(dim = c(128, 128, 3))
for(i in 1:3){
bird_small_transform[,,i] <- bird_small[, ((i-1)*128+1):(i*128)]
}
sum(bird_small_transform!=bird_small_mat)
setwd("../")
bird_small <-readMat("data/ex7data/bird_small.mat")
?as.data.frame
dim(t(bird_small))
dim(bird_small)
bird_small <-readMat("data/ex7data/bird_small.mat")$A
dim(bird_small)
dim(t(bird_small))
source("../../ex7/ex7_chunks.r")
source("ex7/ex7_chunks.r")
dim(aperm(bird_small, c(3, 1, 2)))
setwd("ex7")
source('~/coursera-ml-R/ex7/ex7_chunks.R')
r <- matrix(runif(9, 0, 1), 3)
g <- matrix(runif(9, 0, 1), 3)
b <- matrix(runif(9, 0, 1), 3)
col <- rgb(r, g, b)
dim(col) <- dim(r)
library(grid)
grid.raster(col, interpolate=FALSE)
col <- rgb(r, g, b)
grid.raster(col, interpolate=FALSE)
dim(col)
dim(r)
source('~/coursera-ml-R/ex7/ex7_chunks.R')
# Chunk 1: dependencies
require(ggplot2)
require(knitr)
library(grid)
read_chunk("ex7_chunks.R")
# Chunk 2: read-data2
ex7data2 <- read.csv("../data/ex7data/ex7data2.csv")
# Chunk 3: explore-data
g1 <- ggplot(ex7data2, aes(V1, V2)) + geom_point()
g1
# Chunk 4: min-Eu-dist
# Chunk 5: test-min-distance
initial_centroids <- matrix(c(3, 3, 6, 2, 8, 5), 3, 2, TRUE)
minEuDist(ex7data2[15,], initial_centroids)
# Chunk 6: find-closest-centroids
# Chunk 7: test-find-centroids
idx <- findClosestCentroids(ex7data2, initial_centroids)
idx[1:3]
# Chunk 8: compute-centroids
# Chunk 9: test-compute-centroids
computeCentroids(ex7data2, idx, initial_centroids)
# Chunk 10: k-means
# Chunk 11: test-k-means
runKMeans <- kMeans(ex7data2, initial_centroids, 10)
ex7data2 <- cbind(ex7data2, K = as.factor(runKMeans[nrow(runKMeans), 1:300]))
# Chunk 12: plot-test-k-means
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point(alpha = .4) +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
# Chunk 13: random-init
# Chunk 14: test-random-init
set.seed(12345)
randomInit(ex7data2[,1:2], 3)
bird_small <- t(read.csv("../data/ex7data/bird_small.csv"))
birdInit <- randomInit(bird_small, 16)
startTime <- system.time()
kMeansBird <- kMeans(bird_small, birdInit, 15)
system.time() - startTime
?system.time
Sys.time()
finalCentroid <- kMeansBird[nrow(kMeansBird),(ncol(kMeansBird)-16*3+1):ncol(kMeansBird)]
finalCentroid <- round(matrix(finalCentroid, nrow = 16, ncol = 3, byrow = TRUE))
compressedImage <- t(sapply(kMeansBird[nrow(kMeansBird), 1:128*128], FUN = function(x){
c(x, finalCentroid[x,])
}))
head(compressedImage)
compressedImage <- kMeansBird[nrow(kMeansBird), 1:128*128]
compressedImage <- kMeansBird[nrow(kMeansBird), 1:(128*128)]
compressedImage <- matrix(kMeansBird[nrow(kMeansBird), 1:(128*128)], nrow = 128)
compressedImage[1:16, 1:5]
head(finalCentroid)
r <- sapply(compressedImage, function(x){finalCentroid[x, 1]})
compressedImage <- matrix(kMeansBird[nrow(kMeansBird), 1:(128*128)])
r <- matrix(sapply(compressedImage, function(x){finalCentroid[x, 1]}), nrow = 128)
# Chunk 1: dependencies
require(ggplot2)
require(knitr)
library(grid)
read_chunk("ex7_chunks.R")
# Chunk 2: read-data2
ex7data2 <- read.csv("../data/ex7data/ex7data2.csv")
# Chunk 3: explore-data
g1 <- ggplot(ex7data2, aes(V1, V2)) + geom_point()
g1
# Chunk 4: min-Eu-dist
# Chunk 5: test-min-distance
initial_centroids <- matrix(c(3, 3, 6, 2, 8, 5), 3, 2, TRUE)
minEuDist(ex7data2[15,], initial_centroids)
# Chunk 6: find-closest-centroids
# Chunk 7: test-find-centroids
idx <- findClosestCentroids(ex7data2, initial_centroids)
idx[1:3]
# Chunk 8: compute-centroids
# Chunk 9: test-compute-centroids
computeCentroids(ex7data2, idx, initial_centroids)
# Chunk 10: k-means
# Chunk 11: test-k-means
runKMeans <- kMeans(ex7data2, initial_centroids, 10)
ex7data2 <- cbind(ex7data2, K = as.factor(runKMeans[nrow(runKMeans), 1:300]))
# Chunk 12: plot-test-k-means
g2 <- ggplot(ex7data2, aes(V1, V2, color = K)) +
geom_point(alpha = .4) +
geom_line(data = as.data.frame(runKMeans[, 301:302]),
mapping = aes(V1, V2, color = "1")) +
geom_line(data = as.data.frame(runKMeans[, 303:304]),
mapping = aes(V1, V2, color = "2")) +
geom_line(data = as.data.frame(runKMeans[, 305:306]),
mapping = aes(V1, V2, color = "3")) +
geom_point(data = as.data.frame(runKMeans[, 301:302]),
aes(V1, V2, color = "1"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 303:304]),
aes(V1, V2, color = "2"), shape = 4, size = 3) +
geom_point(data = as.data.frame(runKMeans[, 305:306]),
aes(V1, V2, color = "3"), shape = 4, size = 3)
g2
# Chunk 13: random-init
# Chunk 14: test-random-init
set.seed(12345)
randomInit(ex7data2[,1:2], 3)
# Chunk 15
bird_small <- t(read.csv("../data/ex7data/bird_small.csv"))
birdInit <- randomInit(bird_small, 16)
kMeansBird <- kMeans(bird_small, birdInit, 15)
# Chunk 16: compress-image
finalCentroid <- kMeansBird[nrow(kMeansBird),(ncol(kMeansBird)-16*3+1):ncol(kMeansBird)]
finalCentroid <- round(matrix(finalCentroid, nrow = 16, ncol = 3, byrow = TRUE))
# compressedImage <- t(sapply(kMeansBird[nrow(kMeansBird), 1:128*128], FUN = function(x){
#     c(x, finalCentroid[x,])
#     }))
compressedImage <- matrix(kMeansBird[nrow(kMeansBird), 1:(128*128)])
r <- matrix(sapply(compressedImage, function(x){finalCentroid[x, 1]}), nrow = 128)
g <- matrix(sapply(compressedImage, function(x){finalCentroid[x, 2]}), nrow = 128)
b <- matrix(sapply(compressedImage, function(x){finalCentroid[x, 3]}), nrow = 128)
col <- rgb(r, g, b)
dim(col) <- dim(r)
col
?rgb
?dim
compressedImage <- matrix(kMeansBird[nrow(kMeansBird), 1:(128*128)])
r <- sapply(compressedImage, function(x){finalCentroid[x, 1]})
g <- sapply(compressedImage, function(x){finalCentroid[x, 2]})
b <- sapply(compressedImage, function(x){finalCentroid[x, 3]})
col <- rgb(r, g, b)
?max
max(r)
max(g)
max(b)
debug(rgb)
col <- rgb(r, g, b)
