require(knitr)
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3), shape = as.factor(V3))) +
geom_point()
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3), shape = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score")
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3), shape = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"))
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3), shape = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(0, 1))
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3), shape = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1, 2))
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1, 2))
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2)) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1, 2))
g1
g1 <- ggplot(ex2data1,
aes(x = V1, y = V2, color = as.factor(V3)) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1, 2))
g1
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1, 2))
g1
?scale_shape_manual
require(ggplot2)
require(knitr)
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1
read_chunk("ex2_chunks.R")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
setwd("ex2")
source("ex2_chunks.R")
require(ggplot2)
require(knitr)
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1
read_chunk("ex2_chunks.R")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
str(newTheta)
newTheta$par
newTheta$value
newTheta$counts
newTheta$convergence
newTheta$message
?sig
sig
h
h(newTheta$par, c(1, 45, 85))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores))
c(1, testScores)
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores))
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
View(predLogReg)
predLogReg(ex2data1, newTheta$par)
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
as.logical(ex2data1Pred)
?round
round(ex2data1Pred, 0)
ex2data1[, 4]==round(ex2data1Pred, 0)
ex2data1[, 4]==round(ex2data1Pred, 0) / nrow(ex2data1)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(title = "Figure 1: Scatter plot of training data",
x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
h(c(50, 75))
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
h(c(50, 75))
abcd <- optim(par = newTheta$par,
fn = function(x){h(c(50, 75), x)J},
abcd <- optim(par = newTheta$par,
fn = function(x){h(c(50, 75), x)},
method = "BFGS", control = list(maxit = 400))
h(c(1, 50, 75), newTheta$par)
h(c(1, 50, 75), newTheta$par) - 0.5
abcd <- optim(par = newTheta$par,
fn = function(x){(h(c(1, 50, 75), x) - 0.5) ^ 2},
method = "BFGS", control = list(maxit = 400))
abcd
abcd <- optim(par = c(1, 50, 75),
fn = function(x){(h(x, newTheta$par) - 0.5) ^ 2},
method = "BFGS", control = list(maxit = 400))
abcd
abcd <- optim(par = c(50, 75),
fn = function(x){(h(c(1, x), newTheta$par) - 0.5) ^ 2},
method = "BFGS", control = list(maxit = 400))
abcd <- optim(par = c(50, 75),
fn = function(x){(h(c(1, x), newTheta$par) - 0.5) ^ 2},
method = "BFGS", control = list(maxit = 400))
abcd
h(c(1, abcd$par), newTheta$par)
abcd <- optim(par = 75,
fn = function(x){(h(c(1, 50, x), newTheta$par) - 0.5) ^ 2},
method = "BFGS", control = list(maxit = 400))
h(c(1, 50, abcd$par), newTheta$par)
abcd$par
?matrix
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
findDecisionBoundary(theta = newTheta$par)
debug(findDecisionBoundary)
findDecisionBoundary(theta = newTheta$par)
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
findDecisionBoundary(theta = newTheta$par)
aaa <- findDecisionBoundary(theta = newTheta$par)
aaa[1]
aaa[[1]]
do.call(rbind, aaa)
?data.frame
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
aaa <- findDecisionBoundary(theta = newTheta$par)
debug(findDecisionBoundary)
aaa <- findDecisionBoundary(theta = newTheta$par)
pts[, 1]
pts[, 2]
newYs$par
newYs
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
aaa <- findDecisionBoundary(theta = newTheta$par)
aaa <- findDecisionBoundary(theta = newTheta$par)
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
aaa <- findDecisionBoundary(theta = newTheta$par)
debug(findDecisionBoundary)
aaa <- findDecisionBoundary(theta = newTheta$par)
newYs
str(newYs)
newYs$par
newYs
as.data.frame(newYs)
newYs[1]
newYs[2]
newYs[3]
newYs[[1]]
as.data.frame(newYs)
data.frame(newYs)
newYs[[1:2]]
newYs[[1]]
newYs[[2]]
newYs[1:2]
newYs <- apply(pts, 1, function(x){
optim(par = x[2],
fn = function(y){
(h(c(1, x[1], y), theta) - 0.5) ^ 2
# Squared so min wil be at the decision boundary
},
method = "BFGS", control = list(maxit = 400))
})
newYs[1:2]
newYs <- do.call(rbind, newYs)
unlist(newYs[1:2])
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
aaa <- findDecisionBoundary(theta = newTheta$par)
aaa
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
lm(aaa$x ~ aaa$newY)
?lm
lm(x ~ newY, aaa)
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
decPoints <- findDecisionBoundary(theta = newTheta$par)
decPoints
apply(decPoints[, c(1, 3)], 1, function(x){h(c(1, x)), newTheta$par})
apply(decPoints[, c(1, 3)], 1, function(x){h(c(1, x), newTheta$par)})
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
decPoints <- findDecisionBoundary(theta = newTheta$par)
apply(decPoints[, c(1, 3)], 1, function(x){h(c(1, x), newTheta$par)})
dec.lm <- lm(x ~ newY, decPoints)
dec.lm
dec.lm$coefficients
dec.lm$coefficients[1]
dec.lm$coefficients[[1]]
dec.lm$coefficients[[2]]
g1 + ggtitle("Figure 1: Scatter plot of training data") + ggtitle("ASD;LKFJASDL;KFJA;LSDKJF")
source('C:/Users/Jai/coursera-ml-R/ex2/ex2_chunks.R')
ex2data2 <- read.table("../data/ex2data2.txt", sep = ",")
g3 <- ggplot(ex2data2, aes(V1, V2)) +
geom_point(aes(color = as.factor(V3))) +
labs(x = "Microchip Test 1",
y = "Microchip Test 2",
color = "Legend\n") +
scale_color_manual(labels = c("Pass", "Fail"), values = c(1, 2))
g3 + ggtitle("Figure 3: Plot of training data")
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
decPoints <- findDecisionBoundary(theta = newTheta$par)
apply(decPoints[, c(1, 3)], 1, function(x){h(c(1, x), newTheta$par)})
dec.lm <- lm(x ~ newY, decPoints)
g2 <- g1 +
geom_abline(slope = dec.lm$coefficients[[2]], intercept = dec.lm$coefficients[[1]])
g2 + ggtitle("Figure 2: Training data with decision boundary")
ex2data2 <- read.table("../data/ex2data2.txt", sep = ",")
g3 <- ggplot(ex2data2, aes(V1, V2)) +
geom_point(aes(color = as.factor(V3))) +
labs(x = "Microchip Test 1",
y = "Microchip Test 2",
color = "Legend\n") +
scale_color_manual(labels = c("Fail", "Pass"), values = c(1, 2))
g3 + ggtitle("Figure 3: Plot of training data")
y <- ex2data2$V3
x1s <- ex2data2[, 1]
x2s <- ex2data2[, 2]
for(i in 2:6){
x1s <- cbind(x1s, ex2data2[,1] ^ i)
}
x1s <- cbind(1, x1s)
for(i in 2:6){
x2s <- cbind(x2s, ex2data2[,1] ^ i)
}
x2s <- cbind(1, x2s)
allxs <- vector()
for(i in 1:ncol(x2s)){
allxs <- cbind(allxs, x1s[, 1:(8-i)] * x2s[,i])
}
ex2data2.full <- cbind(allxs, y)
initial_theta <- rep(0, times = 28)
costFunction(ex2data2.full, initial_theta)
costFunction()
costFunction
initial_theta <- rep(0, times = 28)
costFunction(ex2data2.full, initial_theta)$J
require(ggplot2)
require(knitr)
read_chunk("ex2_chunks.R")
ex2data1 <- read.table("../data/ex2data1.txt", sep = ",")
ex2data1 <- cbind(1, ex2data1)
initial_theta <- rep(0, times = 3)
g1 <- ggplot(ex2data1, aes(x = V1, y = V2, color = as.factor(V3))) +
geom_point() +
labs(x = "Exam 1 Score",
y = "Exam 2 Score",
color = "Legend\n") +
scale_color_manual(labels = c("Not Admitted", "Admitted"), values = c(1,2))
g1 + ggtitle("Figure 1: Scatter plot of training data")
ex2data1 <- as.matrix(ex2data1)
newTheta <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data1, x)$J},
gr = function(x){costFunction(ex2data1, x)$grad},
method = "BFGS", control = list(maxit = 400))
testScores <- c(45, 85)
h(newTheta$par, c(1, testScores)) # Include the x0 term
ex2data1Pred <- predLogReg(ex2data1, newTheta$par)
sum(ex2data1[, 4]==round(ex2data1Pred, 0)) / nrow(ex2data1)
decPoints <- findDecisionBoundary(theta = newTheta$par)
apply(decPoints[, c(1, 3)], 1, function(x){h(c(1, x), newTheta$par)})
dec.lm <- lm(x ~ newY, decPoints)
g2 <- g1 +
geom_abline(slope = dec.lm$coefficients[[2]], intercept = dec.lm$coefficients[[1]])
g2 + ggtitle("Figure 2: Training data with decision boundary")
ex2data2 <- read.table("../data/ex2data2.txt", sep = ",")
g3 <- ggplot(ex2data2, aes(V1, V2)) +
geom_point(aes(color = as.factor(V3))) +
labs(x = "Microchip Test 1",
y = "Microchip Test 2",
color = "Legend\n") +
scale_color_manual(labels = c("Fail", "Pass"), values = c(1, 2))
g3 + ggtitle("Figure 3: Plot of training data")
y <- ex2data2$V3
x1s <- ex2data2[, 1]
x2s <- ex2data2[, 2]
for(i in 2:6){
x1s <- cbind(x1s, ex2data2[,1] ^ i)
}
x1s <- cbind(1, x1s)
for(i in 2:6){
x2s <- cbind(x2s, ex2data2[,1] ^ i)
}
x2s <- cbind(1, x2s)
allxs <- vector()
for(i in 1:ncol(x2s)){
allxs <- cbind(allxs, x1s[, 1:(8-i)] * x2s[,i])
}
ex2data2.full <- cbind(allxs, y)
initial_theta <- rep(0, times = 28)
costFunction(ex2data2.full, initial_theta)$J
newTheta2 <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data2.full, x)$J},
gr = function(x){costFunction(ex2data2.full, x)$grad},
method = "BFGS", control = list(maxit = 400))
newTheta2
newTheta2 <- optim(par = initial_theta,
fn = function(x){costFunction(ex2data2.full, x)$J},
gr = function(x){costFunction(ex2data2.full, x)$grad},
method = "BFGS", control = list(maxit = 4000))
newTheta2
?cor
setwd("ex3")
source("../data/process_mat.R")
setwd("../")
source("data/process_mat.R")
