sum(is.na(ex6data1))
sum(is.null(ex6data1))
attach(ex6data1)
linSvm1 <- ksvm(V3 ~ V1 + V2, kernel = "vanilladot", kpar = list())
detach(ex6data1)
ex6data1 <- as.matrix(ex6data1)
linSvm1 <- ksvm(x = ex6data1[, 1:2], y = ex6data1[, 3], kernel = "vanilladot", kpar = list())
str(ex6data1)
head(ex6data1)
ex6data1 <- as.numeric(as.matrix(ex6data1))
head(ex6data1)
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
head(ex6data1)
str(ex6data1)
ex6data1$V3 <- as.factor(ex6data1$V3)
ex6data1[, 3] <- as.factor(ex6data1$V3)
ex6data1[, 3] <- as.factor(ex6data1[, 3])
str(ex6data1)
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
str(ex6data1)
ex6data1[, 3] <- as.factor(ex6data1[, 3])
str(ex6data1)
head(ex6data1)
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
linSvm1 <- ksvm(x = ex6data1[, 1:2], y = ex6data1[, 3], kernel = "vanilladot", kpar = list())
linSvm1
# Chunk 1: dependencies
require(knitr)
requre(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
ex6data1 <- as.matrix(ex6data1)
linSvm1 <- ksvm(x = ex6data1[, 1:2], y = ex6data1[, 3], kernel = "vanilladot", kpar = list())
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 1:2], y = ex6data1[, 3], kernel = "vanilladot", kpar = list())
str(linSvm1)
linSvm1
linSvm1 <- ksvm(x = ex6data1[, 1:2],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list())
linSvm1
plot(linSvm1, data = ex6data1[, 1:2])
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
attributes((linSvm1))
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list(C = 1))
plot(linSvm1, data = ex6data1[, 2:1])
?kpar
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list()
plot(linSvm1, data = ex6data1[, 2:1])
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
?ksvm
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
linSvm10 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 10,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm10, data = ex6data1[, 2:1])
linSvm100 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 100,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm100, data = ex6data1[, 2:1])
source('~/coursera-ml-R/ex6/ex6_chunks.R')
?read_chunk
read_chunk("ex6_chunks.R")
setwd("ex6")
gk(ex6data1[1, 1:2], ex6data1[2, 1:2], 0.03)
alspha(linSvm1)
alpha(linSvm1)
attributes(linSvm1)
dim(ex6data1)
?ksvm
1/51
linSvm1
summary(linSvm1)
?ksvm
cross(linSvm1)
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
alpha(linSvm1)
alphaindex(linSvm1)
prob.model(linSvm1)
vanilladot(ex6data1[1, 1:2], ex6data1[51, 1:2])
str(vanilladot)
?vanilladot
gk(ex6data1[1, 1:2], ex6data1[2, 1:2], 0.1)
rbfdot(ex6data1[1, 1:2], ex6data1[51, 1:2], 0.1)
gk(ex6data1[1, 1:2], ex6data1[51, 1:2], 0.1)
rbf <- rbfdot(0.1)
rbf(ex6data1[1, 1:2], ex6data1[51, 1:2])
rbf
source('~/coursera-ml-R/ex6/ex6_chunks.R')
gk(ex6data1[1, 1:2], ex6data1[51, 1:2], 0.1)
rbf <- rbfdot(0.1)
rbf(ex6data1[1, 1:2], ex6data1[51, 1:2])
a <- c(1, 2, 3)
a^2
source('~/coursera-ml-R/ex6/ex6_chunks.R')
debug(gk)
rbf <- rbfdot(0.1)
rbf(ex6data1[1, 1:2], ex6data1[51, 1:2])
gk(ex6data1[1, 1:2], ex6data1[51, 1:2], 0.1)
normSquared
(Xi - Xj)
(Xi - Xj) ^ 2
exp(-normSquared / (2 * sigma ^ 2))
source('~/coursera-ml-R/ex6/ex6_chunks.R')
?exp
?rbfdot
source('~/coursera-ml-R/ex6/ex6_chunks.R')
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
# Chunk 5
linSvm2 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 100,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm2, data = ex6data1[, 2:1])
# Chunk 6: read_chunk
read_chunk("ex6_chunks.R")
# Chunk 7: gaussian-kernel
setwd("ex6")
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
# Chunk 5
linSvm2 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 100,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm2, data = ex6data1[, 2:1])
# Chunk 6: read_chunk
read_chunk("ex6_chunks.R")
# Chunk 7: gaussian-kernel
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma) # or maybe sigma = 2? not sure
rbf <- rbfdot(sigma)
rbf(x1, x2)
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma) # or maybe sigma = 2? not sure
rbf <- rbfdot(sigma)
rbf(x1, x2)
?rbfdot
?rbf
str(rbf)
rbf
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma)
rbf <- rbfdot(1 / sigma)
rbf(x1, x2)
?rbfdot
?rbf
str(rbf)
rbf@kpar
rbf@.Data()
rbf@.Data
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma)
rbf <- rbfdot(2 * sigma ^ 2)
rbf(x1, x2)
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma)
rbf <- rbfdot(2 * (1/sigma) ^ 2)
rbf(x1, x2)
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma)
rbf <- rbfdot((1/sigma) ^ 2)
rbf(x1, x2)
x1 <- c(1, 2, 1)
x2 = c(0, 4, -1)
sigma = 2
gk(x1, x2, sigma)
rbf <- rbfdot(sigma ^ 2)
rbf(x1, x2)
rbf <- rbfdot(1/(2*sigma ^ 2))
rbf(x1, x2)
source('~/coursera-ml-R/ex6/ex6_chunks.R')
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
# Chunk 5
linSvm2 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 100,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm2, data = ex6data1[, 2:1])
# Chunk 6: read_chunk
read_chunk("ex6_chunks.R")
# Chunk 7: gaussian-kernel
# Chunk 8: sigma-transformation
linSvm1
linSvm2
str(linSvm1)
?ksvm
linSvm1@coef
ex6data1[linSvm1@alphaindex,]
ex6data1[linSvm1@alphaindex[[1]],]
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
w <- colSums(coef(linSvm1)[[1]] * ex6data1[unlist(alphaindex(linSvm1)), 2:1])
w
b <- b(linSvm1)
abline(b/w[1],-w[2]/w[1])
abline((b+1)/w[1],-w[2]/w[1],lty=2)
abline((b-1)/w[1],-w[2]/w[1],lty=2)
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
# Chunk 3: explore-data1
g1 <- ggplot(data = ex6data1, aes(V1, V2, color = V3, shape = V3)) +
geom_point()
g1
# Chunk 4
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
# Chunk 5: temp-chunk
w <- colSums(coef(linSvm1)[[1]] * ex6data1[unlist(alphaindex(linSvm1)), 2:1])
b <- b(linSvm1)
abline(b/w[1],-w[2]/w[1])
abline((b+1)/w[1],-w[2]/w[1],lty=2)
abline((b-1)/w[1],-w[2]/w[1],lty=2)
b/w[1]
-w[2]/w[1]
?abline
b
plot(scale(linSvm1), data = ex6data1[, 2:1])
w <- colSums(coef(linSvm1)[[1]] * ex6data1[unlist(alphaindex(linSvm1)), 2:1])
b <- b(linSvm1)
abline(b/w[1],-w[2]/w[1])
abline((b+1)/w[1],-w[2]/w[1],lty=2)
abline((b-1)/w[1],-w[2]/w[1],lty=2)
plot(linSvm1, data = ex6data1[, 2:1])
)
plot(scale(linSvm1), data = ex6data1[, 2:1])
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
ex6data1
str(ex6data1)
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
# Chunk 1: dependencies
require(knitr)
require(ggplot2)
require(kernlab)
# Chunk 2: read-data
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = as.matrix(ex6data1[, 2:1]),
y = as.matrix(ex6data1[, 3]),
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
linSvm1 <- ksvm(x = as.matrix(ex6data1[, 2:1]),
y = as.matrix(ex6data1[, 3]),
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = as.matrix(ex6data1[, 2:1]))
plot(scale(linSvm1), data = ex6data1[, 2:1])
plot(scale(linSvm1), data = as.matrix(ex6data1[, 2:1]))
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = as.matrix(ex6data1[, 2:1]),
y = as.matrix(ex6data1[, 3]),
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
linSvm1
plot(linSvm1, data = as.matrix(ex6data1[, 2:1]))
plot(scale(linSvm1), data = as.matrix(ex6data1[, 2:1]))
set.seed(101)
x <- rbind(matrix(rnorm(120),,2),matrix(rnorm(120,mean=3),,2))
y <- matrix(c(rep(1,60),rep(-1,60)))
svp <- ksvm(x,y,type="C-svc")
plot(svp,data=x)
plot(scale(x), col=y+2, pch=y+2, xlab="", ylab="")
w <- colSums(coef(svp)[[1]] * x[unlist(alphaindex(svp)),])
b <- b(svp)
abline(b/w[1],-w[2]/w[1])
abline((b+1)/w[1],-w[2]/w[1],lty=2)
abline((b-1)/w[1],-w[2]/w[1],lty=2)
str(x)
head(x)
str(ex6data1)
ex6data1 <- read.csv("../data/ex6data/ex6data1.csv")
ex6data1[, 3] <- as.factor(ex6data1[, 3])
ex6data1 <- as.matrix(read.csv("../data/ex6data/ex6data1.csv"))
ex6data1[, 3] <- as.factor(ex6data1[, 3])
linSvm1 <- ksvm(x = ex6data1[, 2:1],
y = ex6data1[, 3],
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
str(ex6data1[,2:1])
linSvm1 <- ksvm(x,
y,
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = x)
linSvm1 <- ksvm(x,
y,
C = 1,
type = "C-svc",
kernel = "vanilladot",
kpar = list())
plot(linSvm1, data = ex6data1[, 2:1])
plot(linSvm1, data = x)
plot(scale(linSvm1), data = x)
str(x)
w <- colSums(coef(linSvm1)[[1]] * ex6data1[unlist(alphaindex(linSvm1)), 2:1])
b <- b(linSvm1)
